{"version":3,"sources":["pages/utils/index.js","pages/components/Snippets/CssSnippet.js","redux/actions.js","redux/default_state.js","redux/reducer.js","redux/store.js","pages/logic/setAnimation.js","pages/logic/svgGenerator.js","pages/logic/keyFramesGenerator.js","pages/components/Holders/SettingsHolder.js","pages/components/Holders/SvgHolder.js","pages/components/Extras/Bmc.js","pages/components/Extras/Header.js","pages/components/Holders/CodeHolder.js","pages/components/Snippets/JsSnippet.js","pages/components/Snippets/SvgSnippet.js","pages/components/Extras/Git.js","pages/components/Extras/Footer.js","pages/components/Extras/DownloadBundle.js","pages/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["format","html","result","indent","split","forEach","element","match","substring","length","download","filename","text","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","CssSnippet","css","useEffect","Prism","highlightAll","id","className","onClick","connect","state","output","setOutput","type","value","default_state","settings","fontFamily","fontVariant","size","unionCheckbox","separateCheckbox","bezierAccuracy","delay","duration","strokeWidth","fillColor","strokeColor","timingFunction","svg","js","meta","initialized","reducer","action","isNaN","store","createStore","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","setTextAnimation","paths","querySelectorAll","i","path","getTotalLength","svgGenerator","getState","this","fontList","init","bind","loadFonts","then","_","dispatch","selectFamily","$","selectVariant","a","fetch","res","json","console","log","items","font","addOption","family","loadVariants","renderCurrent","parseFloat","fontIndex","selectedIndex","variantIndex","f","v","variants","url","files","opentype","load","err","textModel","makerjs","models","Text","layer","exporter","toSVG","jscode","toPrecision","signature","setAnimation","old_style","getElementById","remove","animation","keyFrames","innerHTML","getElementsByTagName","genKeyFrames","options","selector","querySelector","select","optionText","option","add","SettingsHolder","props","update","key","val","placeholder","onChange","e","target","href","rel","valueAsNumber","SvgHolder","dangerouslySetInnerHTML","__html","Bmc","src","alt","marginLeft","fontSize","Header","CodeHolder","children","JsSnippet","SvgSnippet","Git","data-icon","data-size","data-show-count","aria-label","Footer","DownloadBundle","html_file","MainPage","App","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b32f2d13.chunk.js","sourcesContent":["export const format = (html) => {\r\n    var tab = '\\t';\r\n    var result = '';\r\n    var indent = '';\r\n\r\n    html.split(/>\\s*</).forEach(function (element) {\r\n        if (element.match(/^\\/\\w/)) {\r\n            indent = indent.substring(tab.length);\r\n        }\r\n\r\n        result += indent + '<' + element + '>\\r\\n';\r\n\r\n        if (element.match(/^<?\\w[^>]*[^/]$/)) {\r\n            indent += tab;\r\n        }\r\n    });\r\n\r\n    return result.substring(1, result.length - 3);\r\n}\r\n\r\n\r\nexport const download=(filename, text)=> {\r\n    var element = document.createElement('a');\r\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n    element.setAttribute('download', filename);\r\n  \r\n    element.style.display = 'none';\r\n    document.body.appendChild(element);\r\n  \r\n    element.click();\r\n  \r\n    document.body.removeChild(element);\r\n  }","// import \"prismjs/themes/prism-coy.css\";\r\n// import \"prismjs/themes/prism-dark.css\";\r\n// import \"prismjs/themes/prism-funky.css\";\r\n// import \"prismjs/themes/prism-okaidia.css\";\r\n// import \"prismjs/themes/prism-solarizedlight.css\";\r\n// import \"prismjs/themes/prism-twilight.css\";\r\n// import \"prismjs/themes/prism.css\";\r\nimport \"prismjs/themes/prism-tomorrow.css\";\r\nimport Prism from 'prismjs';\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { download } from './../../utils'\r\n\r\nlet CssSnippet = ({ css }) => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [css])\r\n  return (\r\n    <div id=\"output-css\">\r\n      <div className=\"context\">\r\n        <h2 className=\"code-heading\">CSS Snippet</h2>\r\n        <button className=\"download-btn\" onClick={() => { download('text-animation.css', css) }}>Download CSS</button>\r\n      </div>\r\n\r\n      <pre>\r\n        <code className=\"language-css\">\r\n          {css}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let css = state.output.css;\r\n  return { css }\r\n}\r\n\r\n\r\nCssSnippet = connect(mapStateToProps, null)(CssSnippet)\r\n\r\nexport default CssSnippet\r\n\r\n","// input\r\nexport const SET_TEXT = \"SET_TEXT\",\r\n    SET_FONT_FAMILY = \"SET_FONT_FAMILY\",\r\n    SET_FONT_VARIANT = \"SET_FONT_VARIANT\",\r\n    SET_SIZE = \"SET_SIZE\",\r\n    SET_TIMING_FUNCTION = \"SET_TIMING_FUNCTION\",\r\n    SET_DELAY = \"SET_DELAY\",\r\n    SET_DURATION = \"SET_DURATION\",\r\n    SET_STROKE_WIDTH = \"SET_STROKE_WIDTH\",\r\n    SET_FILL_COLOR = \"SET_FILL_COLOR\",\r\n    SET_STROKE_COLOR = \"SET_STROKE_COLOR\",\r\n\r\n    // output\r\n    SET_SVG = \"SET_SVG\",\r\n    SET_CSS = \"SET_CSS\",\r\n    SET_JS = \"SET_JS\",\r\n\r\n    // meta\r\n    SET_INITIALIZED = \"SET_INITIALIZED\"\r\n\r\n\r\n\r\n\r\nexport function setSettings(type, value) {\r\n    return { type: type, value: value, }\r\n}\r\n\r\nexport function setOutput(type, value) {\r\n    return { type: type, value: value, }\r\n}\r\n\r\nexport function setMeta(type, value) {\r\n    return { type: type, value: value, }\r\n}\r\n","export const default_state = {\r\n    settings: {\r\n        fontFamily: \"\",\r\n        fontVariant: \"\",\r\n        text: \"@akashraj9828\",\r\n        size: 150,\r\n        unionCheckbox: false,\r\n        separateCheckbox: true,\r\n        bezierAccuracy: '',\r\n        delay: 0.1,\r\n        duration: '',\r\n        strokeWidth: 2,\r\n        fillColor: '#f16f6b',\r\n        strokeColor:'#ffffff',\r\n        timingFunction:'linear'\r\n    },\r\n    output: {\r\n        svg: '',\r\n        css: '',\r\n        js: '',\r\n    },\r\n    meta: {\r\n        initialized: false\r\n    }\r\n\r\n}","import {default_state} from './default_state'\r\nimport {\r\n    SET_TEXT,\r\n    SET_FONT_FAMILY,\r\n    SET_FONT_VARIANT,\r\n    SET_TIMING_FUNCTION,\r\n    SET_SIZE,\r\n    SET_DELAY,\r\n    SET_DURATION,\r\n    SET_STROKE_WIDTH,\r\n    SET_FILL_COLOR,\r\n    SET_STROKE_COLOR,\r\n    // output\r\n    SET_SVG,\r\n    SET_CSS,\r\n    SET_JS,\r\n    // meta\r\n    SET_INITIALIZED\r\n} from \"./actions\"\r\n\r\n\r\n\r\nfunction reducer(state = default_state, action) {\r\n    let { settings, output ,meta} = {...state};\r\n    let value = action.value;\r\n    var new_state=null\r\n    switch (action.type) {\r\n        case SET_TEXT:\r\n            settings.text = value\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n        case SET_FONT_FAMILY:\r\n            settings.fontFamily = value\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n        case SET_FONT_VARIANT:\r\n            settings.fontVariant = value\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n        case SET_SIZE:\r\n            settings.size = value??0\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n\r\n        case SET_DELAY:\r\n            settings.delay = isNaN(value)?'':value\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n        case SET_TIMING_FUNCTION:\r\n            settings.timingFunction = value\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n\r\n        case SET_DURATION:\r\n            settings.duration = isNaN(value)?'':value\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n\r\n        case SET_STROKE_WIDTH:\r\n            settings.strokeWidth = isNaN(value)?'':value\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n\r\n        case SET_FILL_COLOR:\r\n            settings.fillColor = value\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n        case SET_STROKE_COLOR:\r\n            settings.strokeColor = value\r\n            new_state={ ...state, settings }\r\n            return new_state\r\n\r\n\r\n        case SET_CSS:\r\n            output.css = value\r\n            return { ...state, output }\r\n\r\n        case SET_JS:\r\n            output.js = value\r\n            return { ...state, output }\r\n\r\n        case SET_SVG:\r\n            output.svg = value\r\n            return { ...state, output }\r\n\r\n        case SET_INITIALIZED:\r\n            meta.initialized = value\r\n            return { ...state, meta }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default reducer\r\n","\r\nimport { createStore } from 'redux'\r\n\r\nimport Reducer from './reducer';\r\nimport { default_state } from './default_state'\r\n\r\n\r\n\r\n\r\nconst store = createStore(\r\n  Reducer,\r\n  default_state,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store;","import store from \"./../../redux/store\"\r\nimport { SET_JS, setOutput } from './../../redux/actions'\r\n\r\n\r\n\r\n\r\nexport function setAnimation(get_signature = false) {\r\n\r\n    let jscode = \"\"\r\n    if (process.env.NODE_ENV === \"production\") {\r\n        jscode=`    function setTextAnimation(delay, duration, strokeWidth, timingFunction, strokeColor) {\r\n            let paths = document.querySelectorAll(\"path\");\r\n            for (let i = 0; i < paths.length; i++) {\r\n                const path = paths[i];\r\n                const length = path.getTotalLength();\r\n                path.style[\"stroke-dashoffset\"] = \\`\\${length}px\\`;\r\n                path.style[\"stroke-dasharray\"] = \\`\\${length}px\\`;\r\n                path.style[\"stroke-width\"] = \\`\\${strokeWidth}px\\`;\r\n                path.style[\"stroke\"] = \\`\\${strokeColor}\\`;\r\n                path.style[\"animation\"] = \\`\\${duration}s svg-text-anim infinite \\${timingFunction}\\`;\r\n                path.style[\"animation-delay\"] = \\`\\${i * delay}s\\`;\r\n            }\r\n        \r\n        }`\r\n    }else{\r\n        let js_function = setTextAnimation\r\n        if (js_function) {\r\n            jscode = js_function.toString()\r\n        }\r\n    }\r\n    let { settings } = store.getState()\r\n    let { delay, duration, strokeWidth, timingFunction, strokeColor } = settings\r\n    let paths = document.querySelectorAll(\"path\");\r\n\r\n    delay = delay === '' || delay === null ? 0.1 : delay\r\n    duration = duration === '' || duration === null ? paths.length * delay + 2 : duration\r\n    strokeWidth = strokeWidth === '' || strokeWidth === null ? 2 : strokeWidth\r\n    // strokeWidth = strokeWidth ?? 2\r\n    timingFunction = timingFunction ?? \"linear\"\r\n\r\n    // limit decimal points\r\n    delay = parseFloat(delay.toPrecision(2))\r\n    duration = parseFloat(duration.toPrecision(2))\r\n    strokeWidth = parseFloat(strokeWidth.toPrecision(2))\r\n\r\n    setTextAnimation(delay, duration, strokeWidth, timingFunction, strokeColor);\r\n    // debugger\r\n    let signature = `${jscode}\\n setTextAnimation(${delay},${duration},${strokeWidth},'${timingFunction}','${strokeColor}');`\r\n    store.dispatch(setOutput(SET_JS, signature))\r\n}\r\n\r\n\r\nexport function setTextAnimation(delay, duration, strokeWidth, timingFunction, strokeColor) {\r\n    let paths = document.querySelectorAll(\"path\");\r\n    for (let i = 0; i < paths.length; i++) {\r\n        const path = paths[i];\r\n        const length = path.getTotalLength();\r\n        path.style[\"stroke-dashoffset\"] = `${length}px`;\r\n        path.style[\"stroke-dasharray\"] = `${length}px`;\r\n        path.style[\"stroke-width\"] = `${strokeWidth}px`;\r\n        path.style[\"stroke\"] = `${strokeColor}`;\r\n        path.style[\"animation\"] = `${duration}s svg-text-anim infinite ${timingFunction}`;\r\n        path.style[\"animation-delay\"] = `${i * delay}s`;\r\n    }\r\n\r\n}","import makerjs from \"makerjs\"\r\nimport opentype from \"opentype.js\"\r\nimport { setAnimation } from \"./setAnimation\"\r\nimport store from \"./../../redux/store\"\r\nimport { setOutput, SET_SVG, setMeta, SET_INITIALIZED } from \"./../../redux/actions\"\r\nimport { genKeyFrames } from \"./index\"\r\n\r\nfunction App() {\r\n    let state = store.getState();\r\n    let { settings} = state;\r\n    this.initialized = false;\r\n    this.fontList = {}\r\n    this.init = function () {\r\n        this.bind()\r\n        this.loadFonts().then(_ => {\r\n            store.dispatch(setMeta(SET_INITIALIZED, true))\r\n        })\r\n    }\r\n    this.bind = function () {\r\n        this.selectFamily = this.$('#font-select');\r\n        this.selectVariant = this.$('#font-variant');\r\n    };\r\n\r\n    this.loadFonts = async function () {\r\n        const apiKey = 'AIzaSyDedkw4Dr7wPMbTcUfTpXBLgyoncPygzDU';\r\n        let fontList = await fetch(`https://www.googleapis.com/webfonts/v1/webfonts?key=${apiKey}`).then(res => res.json())\r\n        this.fontList = fontList;\r\n        console.log(\"---: App -> fontList\", fontList);\r\n        this.fontList.items.forEach(\r\n            (font) => {\r\n                return this.addOption(this.selectFamily, font.family);\r\n            }\r\n        );\r\n        this.loadVariants();\r\n        return 1\r\n    }\r\n    this.renderCurrent = function () {\r\n        var size = settings.size;\r\n        if (!size)\r\n            size = parseFloat(settings.size);\r\n        if (!size)\r\n            size = 100;\r\n        let fontIndex = this.selectFamily.selectedIndex, variantIndex = this.selectVariant.selectedIndex, text = settings.text, union = false, separate = true, bezierAccuracy = '';\r\n        var f = this.fontList.items[fontIndex];\r\n        var v = f.variants[variantIndex];\r\n        var url = f.files[v].substring(5); //remove http:\r\n        opentype.load(url, (err, font) => {\r\n            //generate the text using a font\r\n            var textModel = new makerjs.models.Text(font, text, size, union, false, bezierAccuracy);\r\n            if (separate) {\r\n                for (var i in textModel.models) {\r\n                    textModel.models[i].layer = i;\r\n                }\r\n            }\r\n            var svg = makerjs.exporter.toSVG(textModel);\r\n            store.dispatch(setOutput(SET_SVG, svg))\r\n            setAnimation();\r\n            genKeyFrames()\r\n        });\r\n    };\r\n\r\n    // loads variants after font-change\r\n    this.loadVariants = function () {\r\n        this.selectVariant.options.length = 0;\r\n        var f = this.fontList.items[this.selectFamily.selectedIndex];\r\n        f.variants.forEach((v) => { return this.addOption(this.selectVariant, v); });\r\n        this.renderCurrent();\r\n    };\r\n    this.$ = function (selector) {\r\n        return document.querySelector(selector);\r\n    };\r\n\r\n    this.addOption = function (select, optionText) {\r\n        var option = document.createElement('option');\r\n        option.text = optionText;\r\n        option.value = optionText;\r\n        select.options.add(option);\r\n    };\r\n\r\n}\r\n\r\nexport const svgGenerator = new App();\r\n","import store from \"./../../redux/store\"\r\nimport { setOutput, SET_CSS } from \"./../../redux/actions\"\r\n\r\n\r\nexport const genKeyFrames = () => {\r\n  const old_style = document.getElementById('animation-keyframes')\r\n  let fillColor=store.getState().settings.fillColor\r\n  if (old_style) {\r\n    old_style.remove()\r\n  }\r\n  var style = document.createElement('style');\r\n  style.type = 'text/css';\r\n  style.id = 'animation-keyframes';\r\n\r\n  let animation = `   40% {\r\n          stroke-dashoffset: 0;\r\n          fill: transparent;\r\n        }\r\n        60% {\r\n          stroke-dashoffset: 0;\r\n          fill: ${fillColor};\r\n        }\r\n        100% {\r\n          stroke-dashoffset: 0;\r\n          fill: ${fillColor};\r\n        }\r\n        `\r\n  var keyFrames = `     /* Google chrome */\r\n      @-webkit-keyframes svg-text-anim {\r\n    ${animation}\r\n    }\r\n    /* Most browsers */\r\n    @keyframes svg-text-anim {\r\n    ${animation}\r\n    }`;\r\n  style.innerHTML = keyFrames;\r\n  document.getElementsByTagName('head')[0].appendChild(style);\r\n  store.dispatch(setOutput(SET_CSS, keyFrames))\r\n\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    SET_TEXT,\r\n    SET_SIZE,\r\n    SET_DELAY,\r\n    SET_DURATION,\r\n    SET_STROKE_WIDTH,\r\n    setSettings,\r\n    SET_FILL_COLOR,\r\n    SET_FONT_FAMILY,\r\n    SET_FONT_VARIANT,\r\n    SET_TIMING_FUNCTION,\r\n    SET_STROKE_COLOR,\r\n} from './../../../redux/actions'\r\n\r\n\r\nimport { svgGenerator } from './../../logic/'\r\n\r\nlet SettingsHolder = (props) => {\r\n\r\n    let { dispatch } = props\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    let { fontFamily, fontVariant, text, size, unionCheckbox, separateCheckbox, bezierAccuracy, delay, duration, strokeWidth, fillColor, timingFunction, strokeColor, initialized } = props\r\n\r\n    useEffect(() => {\r\n        if (initialized) {\r\n            svgGenerator.renderCurrent()\r\n        }\r\n    }, [text, size, delay, duration, strokeWidth, fillColor, fontVariant, timingFunction, strokeColor, initialized])\r\n\r\n    useEffect(() => {\r\n\r\n        if (initialized) {\r\n            svgGenerator.loadVariants()\r\n        }\r\n    }, [fontFamily, initialized])\r\n\r\n\r\n\r\n\r\n    const update = (key, val) => {\r\n        dispatch(setSettings(key, val))\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings\">\r\n            <div className=\"text-holder\">\r\n                <div className=\"input-group text-center \">\r\n                    <input\r\n                        className=\"input-text text-center \"\r\n                        type=\"text\"\r\n                        id=\"input-text\"\r\n                        value={text}\r\n                        placeholder=\"Input Text Here\"\r\n                        onChange={e => update(SET_TEXT, e.target.value)}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"tuners-holder\">\r\n                <div>\r\n                    <div className=\"input-group\">\r\n                        <label>Font: <span className=\"fonts-info\">(Check all fonts <a className=\"fonts-link\" href=\"https://fonts.google.com/?sort=alpha\" target=\"_blank\" rel=\"noopener noreferrer\" >here</a>)</span> </label>\r\n                        <select\r\n                            id=\"font-select\"\r\n                            value={fontFamily}\r\n                            onChange={e => update(SET_FONT_FAMILY, e.target.value)}\r\n                        >\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label>Variant:</label>\r\n                        <select\r\n                            id=\"font-variant\"\r\n                            value={fontVariant}\r\n                            onChange={e => update(SET_FONT_VARIANT, e.target.value)}\r\n                        >\r\n                        </select>\r\n\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"input-group\">\r\n\r\n                        <label>Size:</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"input-size\"\r\n                            value={size}\r\n                            placeholder={100}\r\n                            onChange={e => update(SET_SIZE, e.target.value)}\r\n\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label>Stroke Width(px):</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"input-width\"\r\n                            value={strokeWidth}\r\n                            placeholder={2 + 'px'}\r\n                            onChange={e => update(SET_STROKE_WIDTH, e.target.valueAsNumber)}\r\n\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div className=\"input-group\">\r\n\r\n                        <label>Delay(s):</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"input-delay\"\r\n                            placeholder={0.1 + 's'}\r\n                            value={delay}\r\n                            onChange={e => update(SET_DELAY, e.target.valueAsNumber)}\r\n\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n\r\n                        <label>Animation duration(s):</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"input-duration\"\r\n                            placeholder=\"auto\"\r\n                            value={duration}\r\n                            onChange={e => update(SET_DURATION, e.target.valueAsNumber)}\r\n\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"input-group\">\r\n                        <label>Timing Function:</label>\r\n                        <select id=\"timing-function\"\r\n                            value={timingFunction}\r\n                            onChange={e => update(SET_TIMING_FUNCTION, e.target.value)}\r\n                        >\r\n                            <option value='ease'>ease</option>\r\n                            <option value='ease-in'>ease-in</option>\r\n                            <option value='ease-out'>ease-out</option>\r\n                            <option value='ease-in-out'>ease-in-out</option>\r\n                            <option value='linear'>linear</option>\r\n                            <option value='step-start'>step-start</option>\r\n                            <option value='step-end'>step-end</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>Fill Color:</label>\r\n                        <input\r\n                            type=\"color\"\r\n                            id=\"input-color\"\r\n                            value={fillColor}\r\n                            onChange={e => update(SET_FILL_COLOR, e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>Stroke Color:</label>\r\n                        <input\r\n                            type=\"color\"\r\n                            id=\"input-color\"\r\n                            value={strokeColor}\r\n                            onChange={e => update(SET_STROKE_COLOR, e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {/* <label</label>\r\n                            className=\"hidden\">Separate characters:\r\n                        <input\r\n                                type=\"checkbox\" checked\r\n                                id=\"input-separate\"\r\n                            />\r\n                        \r\n                        <label</label>\r\n                            className=\"hidden\">Union:\r\n                        <input\r\n                                type=\"checkbox\"\r\n                                id=\"input-union\"\r\n                            />\r\n                         */}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    let { settings, meta } = state\r\n    return { ...settings, ...meta }\r\n}\r\n\r\n\r\nSettingsHolder = connect(mapStateToProps, null)(SettingsHolder)\r\n// SettingsHolder = connect(null, null)(SettingsHolder)\r\nexport default SettingsHolder\r\n","import React from 'react'\r\n\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet SvgHolder = ({ svg }) => {\r\n    return (\r\n        <div id=\"svg-holder\" dangerouslySetInnerHTML={{__html:svg}} >\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    let svg = state.output.svg\r\n    return { svg }\r\n}\r\nSvgHolder = connect(mapStateToProps, null)(SvgHolder)\r\nexport default SvgHolder\r\n","import React from 'react'\r\nlet Bmc = () => {\r\n\r\n    return (\r\n        <a className=\"bmc-button\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.buymeacoffee.com/akashraj9828\">\r\n            <img\r\n                src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\"\r\n                alt=\"Buy me a coffee\" />\r\n            <span\r\n                style={{marginLeft:'5px',fontSize:'28px!important'}}>\r\n                Buy me a coffee\r\n                </span>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Bmc;","import React, { Fragment } from 'react'\r\nimport Bmc from './Bmc'\r\nconst Header = () => {\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <h1 className=\"title\">SVG TEXT ANIMATION GENERATOR</h1>\r\n                <h4 className=\"subtitle\"> (Pure CSS no libraries used)</h4>\r\n            </div>\r\n            <div className=\"extras\">\r\n            </div>\r\n            <Bmc />\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Fragment } from 'react'\r\n\r\nconst CodeHolder = ({children}) => {\r\n    return (\r\n        <Fragment>\r\n        <div className=\"code-holder\">\r\n            {children}\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default CodeHolder\r\n","import React, { useEffect } from 'react'\r\nimport \"prismjs/themes/prism-tomorrow.css\";\r\nimport Prism from 'prismjs';\r\nimport { connect } from 'react-redux'\r\nimport { download } from './../../utils'\r\n\r\nlet JsSnippet = ({ js }) => {\r\n    useEffect(() => {\r\n        Prism.highlightAll()\r\n    }, [js])\r\n    return (\r\n        <div id=\"output-js\">\r\n            <div className=\"context\">\r\n                <h2 className=\"code-heading\">JS Snippet</h2>\r\n                <button className=\"download-btn\" onClick={() => { download('text-animation.js', js) }}>Download JS</button>\r\n            </div>\r\n            <pre>\r\n                <code className=\"language-js\">\r\n                    {js}\r\n                </code>\r\n            </pre>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let js = state.output.js;\r\n    return { js }\r\n}\r\n\r\n\r\nJsSnippet = connect(mapStateToProps, null)(JsSnippet)\r\n\r\nexport default JsSnippet\r\n\r\n","import React, { useEffect } from 'react'\r\nimport \"prismjs/themes/prism-tomorrow.css\";\r\nimport Prism from 'prismjs';\r\nimport { connect } from 'react-redux';\r\nimport { format, download } from './../../utils'\r\n\r\n\r\n\r\nlet SvgSnippet = ({ svg }) => {\r\n    useEffect(() => {\r\n        Prism.highlightAll()\r\n    }, [svg])\r\n    return (\r\n        <div id=\"output-svg\">\r\n            <div className=\"context\">\r\n                <h2 className=\"code-heading\">SVG Snippet</h2>\r\n                <button className=\"download-btn\" onClick={() => { download('text.svg', format(svg)) }}>Download SVG</button>\r\n            </div>\r\n            <pre>\r\n                <code className=\"language-html\">\r\n                    {format(svg)}\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let svg = state.output.svg\r\n    return { svg }\r\n}\r\n\r\nSvgSnippet = connect(mapStateToProps, null)(SvgSnippet)\r\nexport default SvgSnippet;\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Git() {\r\n    return (\r\n        <div className=\"gitIcons\">\r\n            <a className=\"github-button\" href=\"https://github.com/akashraj9828/svg-text-animation-generator/fork\" data-icon=\"octicon-repo-forked\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Fork akashraj9828/svg-text-animation-generator on GitHub\">Fork</a>\r\n            <a className=\"github-button\" href=\"https://github.com/akashraj9828/svg-text-animation-generator\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star akashraj9828/svg-text-animation-generator on GitHub\">Star</a>\r\n            <a className=\"github-button\" href=\"https://github.com/akashraj9828\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Follow @akashraj9828 on GitHub\">Follow @akashraj9828</a>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Git\r\n\r\n","import React from 'react'\r\nimport Git from './Git'\r\n\r\nfunction Footer() {\r\n    // const d = new Date();\r\n    return (\r\n        <footer>\r\n            <Git />\r\n            <span className=\"footer-text\">With <span className=\"heart\">❤</span> by <a href=\"https://akashraj.tech\">Akash Raj</a></span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { download } from './../../utils'\r\nlet DownloadBundle = (props) => {\r\n    console.log(\"---: DownloadBundle -> props\", props);\r\n    const { svg, css, js } = props\r\n\r\n    let html_file = `\r\n                    <!DOCTYPE html>\r\n                <html lang=\"en\">\r\n                <head>\r\n                    <meta charset=\"UTF-8\">\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n                    <title>Text Animation</title>\r\n                    <style>\r\n                        ${css}\r\n                    </style>\r\n                </head>\r\n                <body style='background:mediumseagreen'>\r\n                    <div class=\"svg-holder\">\r\n                        ${svg}\r\n                    </div>\r\n                </body>\r\n                <script>\r\n                    ${js}\r\n                </script>\r\n                </html>\r\n            `\r\n    return (\r\n        <div className=\"context text-center my-1\">\r\n            <button className=\"download-btn\" onClick={() => { download('text-animation.html', html_file) }}>Download Source</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let { output } = state\r\n    return {\r\n        ...output\r\n    }\r\n}\r\n\r\n\r\nDownloadBundle = connect(mapStateToProps, null)(DownloadBundle)\r\nexport default DownloadBundle","import React, { Fragment,useEffect } from 'react'\r\nimport CssSnippet from './components/Snippets/CssSnippet'\r\nimport SettingsHolder from './components/Holders/SettingsHolder'\r\nimport SvgHolder from './components/Holders/SvgHolder'\r\nimport Header from './components/Extras/Header'\r\nimport CodeHolder from './components/Holders/CodeHolder'\r\nimport JsSnippet from './components/Snippets/JsSnippet'\r\nimport SvgSnippet from './components/Snippets/SvgSnippet'\r\nimport {svgGenerator} from \"./logic\"\r\nimport Footer from './components/Extras/Footer'\r\nimport DownloadBundle from './components/Extras/DownloadBundle'\r\n\r\nexport default function MainPage() {\r\n    useEffect(() => {\r\n        let test=document.getElementById('font-select')\r\n        if(test){\r\n            svgGenerator.init()\r\n        }\r\n      },[]);\r\n    return (\r\n        <Fragment>\r\n            <Header/>\r\n            <SettingsHolder/>\r\n            <DownloadBundle/>\r\n            <SvgHolder/>\r\n            <CodeHolder>\r\n                <SvgSnippet/>\r\n                <CssSnippet/>\r\n                <JsSnippet/>\r\n            </CodeHolder>\r\n            <Footer/>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport './styles/main.scss';\nimport MainPage from './pages/MainPage';\n\nimport { Provider } from 'react-redux'\nimport store from \"./redux/store\"\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <MainPage />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}